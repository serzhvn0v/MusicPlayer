// Generated by view binder compiler. Do not edit!
package com.harshRajpurohit.musicPlayer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton;
import com.google.android.material.imageview.ShapeableImageView;
import com.harshRajpurohit.musicPlayer.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPlaylistDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button addBtnPD;

  @NonNull
  public final ImageButton backBtnPD;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final LinearLayout linearLayoutDetails;

  @NonNull
  public final TextView moreInfoPD;

  @NonNull
  public final RecyclerView playlistDetailsRV;

  @NonNull
  public final ShapeableImageView playlistImgPD;

  @NonNull
  public final TextView playlistNamePD;

  @NonNull
  public final Button removeAllPD;

  @NonNull
  public final ExtendedFloatingActionButton shuffleBtnPD;

  private ActivityPlaylistDetailsBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button addBtnPD, @NonNull ImageButton backBtnPD, @NonNull LinearLayout linearLayout,
      @NonNull LinearLayout linearLayoutDetails, @NonNull TextView moreInfoPD,
      @NonNull RecyclerView playlistDetailsRV, @NonNull ShapeableImageView playlistImgPD,
      @NonNull TextView playlistNamePD, @NonNull Button removeAllPD,
      @NonNull ExtendedFloatingActionButton shuffleBtnPD) {
    this.rootView = rootView;
    this.addBtnPD = addBtnPD;
    this.backBtnPD = backBtnPD;
    this.linearLayout = linearLayout;
    this.linearLayoutDetails = linearLayoutDetails;
    this.moreInfoPD = moreInfoPD;
    this.playlistDetailsRV = playlistDetailsRV;
    this.playlistImgPD = playlistImgPD;
    this.playlistNamePD = playlistNamePD;
    this.removeAllPD = removeAllPD;
    this.shuffleBtnPD = shuffleBtnPD;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPlaylistDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPlaylistDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_playlist_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPlaylistDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addBtnPD;
      Button addBtnPD = ViewBindings.findChildViewById(rootView, id);
      if (addBtnPD == null) {
        break missingId;
      }

      id = R.id.backBtnPD;
      ImageButton backBtnPD = ViewBindings.findChildViewById(rootView, id);
      if (backBtnPD == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.linearLayoutDetails;
      LinearLayout linearLayoutDetails = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutDetails == null) {
        break missingId;
      }

      id = R.id.moreInfoPD;
      TextView moreInfoPD = ViewBindings.findChildViewById(rootView, id);
      if (moreInfoPD == null) {
        break missingId;
      }

      id = R.id.playlistDetailsRV;
      RecyclerView playlistDetailsRV = ViewBindings.findChildViewById(rootView, id);
      if (playlistDetailsRV == null) {
        break missingId;
      }

      id = R.id.playlistImgPD;
      ShapeableImageView playlistImgPD = ViewBindings.findChildViewById(rootView, id);
      if (playlistImgPD == null) {
        break missingId;
      }

      id = R.id.playlistNamePD;
      TextView playlistNamePD = ViewBindings.findChildViewById(rootView, id);
      if (playlistNamePD == null) {
        break missingId;
      }

      id = R.id.removeAllPD;
      Button removeAllPD = ViewBindings.findChildViewById(rootView, id);
      if (removeAllPD == null) {
        break missingId;
      }

      id = R.id.shuffleBtnPD;
      ExtendedFloatingActionButton shuffleBtnPD = ViewBindings.findChildViewById(rootView, id);
      if (shuffleBtnPD == null) {
        break missingId;
      }

      return new ActivityPlaylistDetailsBinding((ConstraintLayout) rootView, addBtnPD, backBtnPD,
          linearLayout, linearLayoutDetails, moreInfoPD, playlistDetailsRV, playlistImgPD,
          playlistNamePD, removeAllPD, shuffleBtnPD);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
